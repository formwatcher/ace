// Generated by CoffeeScript 1.4.0
(function() {
  var Formwatcher, KEYCODE_ENTER, KEYCODE_ESC, createElement,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  KEYCODE_ESC = 27;

  KEYCODE_ENTER = 13;

  Formwatcher = require("formwatcher");

  createElement = function(string) {
    var div;
    div = document.createElement("div");
    div.innerHTML = string;
    return div.firstChild;
  };

  Formwatcher.registerDecorator((function(_super) {

    __extends(_Class, _super);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    _Class.prototype.name = "Ace";

    _Class.prototype.description = "Turns a textarea into the ace editor.";

    _Class.prototype.nodeNames = ["TEXTAREA"];

    _Class.prototype.classNames = ["ace"];

    _Class.prototype.defaultOptions = {
      theme: null,
      mode: null,
      tabSize: 2,
      softTabs: true
    };

    _Class.prototype.decorate = function(input) {
      var aceContainerElement, aceElement, className, editor, elements, enterFullscreenListener, exitFullScreenElement, exitFullscreen, exitFullscreenListener, goFullScreenElement, goFullscreen, mode, modeMatch, theme, themeMatch, _i, _j, _len, _len1, _ref, _ref1;
      elements = {
        input: input
      };
      input.style.display = "none";
      aceContainerElement = createElement("<div class=\"formwatcher-ace-container embedded\"></div>");
      aceElement = createElement("<div class=\"formwatcher-ace-editor\"></div>");
      aceElement.appendChild(document.createTextNode(input.value));
      goFullScreenElement = createElement("<a href=\"javascript:undefined;\" class=\"go-fullscreen\">Go fullscreen (âŒ˜ - ENTER , CTRL - ENTER)</a>");
      exitFullScreenElement = createElement("<a href=\"javascript:undefined;\" class=\"exit-fullscreen\">Exit fullscreen (ESC)</a>");
      aceContainerElement.appendChild(aceElement);
      aceContainerElement.appendChild(goFullScreenElement);
      aceContainerElement.appendChild(exitFullScreenElement);
      input.parentNode.insertBefore(aceContainerElement, input.nextSibling);
      elements.ace = aceElement;
      editor = window.ace.edit(aceElement);
      editor.getSession().setTabSize(this.options.tabSize);
      editor.getSession().setUseSoftTabs(this.options.softTabs);
      mode = this.options.mode;
      _ref = input.classList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        className = _ref[_i];
        if (modeMatch = /^ace\-mode\-(.+)/.exec(className)) {
          mode = modeMatch[1];
        }
      }
      theme = this.options.theme;
      _ref1 = input.classList;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        className = _ref1[_j];
        if (themeMatch = /^ace\-theme\-(.+)/.exec(className)) {
          theme = themeMatch[1];
        }
      }
      if (theme != null) {
        editor.setTheme("ace/theme/" + theme);
      }
      if (mode != null) {
        editor.getSession().setMode("ace/mode/" + mode);
      }
      editor.getSession().on("change", function(e) {
        return input.value = editor.getValue();
      });
      exitFullscreenListener = function(e) {
        if (e.keyCode === KEYCODE_ESC) {
          return exitFullscreen();
        }
      };
      enterFullscreenListener = function(e) {
        if (e.keyCode === KEYCODE_ENTER && (e.ctrlKey || e.metaKey)) {
          e.stopPropagation();
          e.preventDefault();
          return goFullscreen();
        }
      };
      goFullscreen = function() {
        document.addEventListener("keyup", exitFullscreenListener);
        document.removeEventListener("keydown", enterFullscreenListener);
        aceContainerElement.classList.add("fullscreen");
        aceContainerElement.classList.remove("embedded");
        return editor.resize();
      };
      exitFullscreen = function() {
        document.addEventListener("keydown", enterFullscreenListener);
        document.removeEventListener("keyup", exitFullscreenListener);
        aceContainerElement.classList.add("embedded");
        aceContainerElement.classList.remove("fullscreen");
        return editor.resize();
      };
      goFullScreenElement.addEventListener("click", goFullscreen);
      exitFullScreenElement.addEventListener("click", exitFullscreen);
      exitFullscreen();
      return elements;
    };

    return _Class;

  })(Formwatcher.Decorator));

}).call(this);
